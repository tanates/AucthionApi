// <auto-generated />
using System;
using AuctionEntity.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuctionEntity.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    partial class AuctionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuctionEntity.Entity.AucEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdLote")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOwner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auction");
                });

            modelBuilder.Entity("AuctionEntity.Entity.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EndPrice")
                        .HasColumnType("real");

                    b.Property<Guid>("IdAuctione")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StartPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdAuctione")
                        .IsUnique();

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("AuctionEntity.Entity.Lote", b =>
                {
                    b.HasOne("AuctionEntity.Entity.AucEntity", "Auctione")
                        .WithOne("Lote")
                        .HasForeignKey("AuctionEntity.Entity.Lote", "IdAuctione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auctione");
                });

            modelBuilder.Entity("AuctionEntity.Entity.AucEntity", b =>
                {
                    b.Navigation("Lote")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
